__author__ = 'bob'
from django.db import models

class Participant(models.Model):
    championId = models.IntegerField(default=0)
    highestAchievedSeasonTier = models.CharField(max_length=25, null=True)
    spell1Id = models.IntegerField(default=0)
    spell2Id = models.IntegerField(default=0)
    teamId = models.IntegerField(default=0)

class ParticipantStats(models.Model):
    participant = models.OneToOneField(Participant)
    summonerName = models.CharField(max_length=30, null=True)
    champLevel = models.IntegerField(default=0)
    combatPlayerScore = models.IntegerField(default=0)
    deaths = models.IntegerField(default=0)
    assists = models.IntegerField(default=0)
    doubleKills = models.IntegerField(default=0)
    firstBloodAssist = models.BooleanField(default=False)
    firstBloodKill = models.BooleanField(default=False)
    firstInhibitorAssist = models.BooleanField(default=False)
    firstInhibitorKill = models.BooleanField(default=False)
    firstTowerAssist = models.BooleanField(default=False)
    firstTowerKill = models.BooleanField(default=False)
    goldEarned = models.IntegerField(default=0)
    goldSpent = models.IntegerField(default=0)
    inhibitorKills = models.IntegerField(default=0)
    item0 = models.IntegerField(default=0)
    item1 = models.IntegerField(default=0)
    item2 = models.IntegerField(default=0)
    item3 = models.IntegerField(default=0)
    item4 = models.IntegerField(default=0)
    item5 = models.IntegerField(default=0)
    item6 = models.IntegerField(default=0)
    killingSprees = models.IntegerField(default=0)
    kills = models.IntegerField(default=0)
    largestCriticalStrike = models.IntegerField(default=0)
    largestKillingSpree = models.IntegerField(default=0)
    largestMultiKill = models.IntegerField(default=0)
    magicDamageDealt = models.IntegerField(default=0)
    magicDamageDealtToChampions = models.IntegerField(default=0)
    magicDamageTaken = models.IntegerField(default=0)
    minionsKilled = models.IntegerField(default=0)
    neutralMinionsKilled = models.IntegerField(default=0)
    neutralMinionsKilledEnemyJungle = models.IntegerField(default=0)
    neutralMinionsKilledTeamJungle = models.IntegerField(default=0)
    nodeCapture = models.IntegerField(null=True)
    nodeCaptureAssist = models.IntegerField(null=True)
    nodeNeutralize = models.IntegerField(null=True)
    nodeNeutralizeAssist = models.IntegerField(null=True)
    objectivePlayerScore = models.IntegerField(null=True)
    pentaKills= models.IntegerField(default=0)
    physicalDamageDealt = models.IntegerField(default=0)
    physicalDamageDealtToChampions = models.IntegerField(default=0)
    physicalDamageTaken= models.IntegerField(default=0)
    quadraKills = models.IntegerField(default=0)
    sightWardsBoughtInGame = models.IntegerField(default=0)
    teamObjective = models.IntegerField(null=True)
    totalDamageDealt= models.IntegerField(default=0)
    totalDamageDealtToChampions = models.IntegerField(default=0)
    totalDamageTaken = models.IntegerField(default=0)
    totalHeal = models.IntegerField(default=0)
    totalPlayerScore = models.IntegerField(default=0)
    totalScoreRank = models.IntegerField(default=0)
    totalTimeCrowdControlDealt = models.IntegerField(default=0)
    totalUnitsHealed = models.IntegerField(default=0)
    towerKills = models.IntegerField(default=0)
    tripleKills = models.IntegerField(default=0)
    trueDamageDealt = models.IntegerField(default=0)
    trueDamageDealtToChampions = models.IntegerField(default=0)
    trueDamageTaken = models.IntegerField(default=0)
    visionWardsBoughtInGame = models.IntegerField(default=0)
    wardsKilled = models.IntegerField(default=0)
    wardsPlaced = models.IntegerField(default=0)
    winner = models.IntegerField(default=0)
    turretsKilled = models.IntegerField(default=0, null=True)
    playerPosition = models.IntegerField(default=0, null=True)
    playerRole = models.IntegerField(default=0, null=True)


class Champions(models.Model):
    id = models.IntegerField(primary_key=True)
    active = models.BooleanField(default=False)
    freeToPlay = models.BooleanField(default=False)
    botMmEnabled = models.BooleanField(default=False)
    rankedPlayEnabled = models.BooleanField(default=False)


class Items(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=256)
    group = models.CharField(max_length=256, null=True)
    description = models.CharField(max_length=1024)
    plaintext = models.CharField(max_length=1024, null=True)

class Summoners(models.Model):
    summonerId = models.IntegerField(default=0, primary_key=True)
    teamId = models.IntegerField(default=0)
    champion = models.ManyToManyField(Champions, null=True)
    dateAdded = models.DateTimeField(auto_now=True, null=True)

class Game(models.Model):
    summonerId=models.IntegerField(default=0)
    gameId=models.IntegerField(primary_key=True),
    gameMode=models.CharField(max_length=50),
    gameType=models.CharField(max_length=50),
    mapId=models.IntegerField(default=0)
    championId=models.ManyToManyField(Champions, null=True)
    spell1=models.IntegerField(default=0)
    spell2=models.IntegerField(default=0)    
    fellowPlayers=models.ManyToManyField(Summoners, null=True)
    ipEarned=models.IntegerField(default=0)
    stats=models.ManyToManyField(ParticipantStats, null=True)
    matchCreation=models.IntegerField(default=0)


class MatchSummary(models.Model):
    mapId = models.CharField(max_length="25")
    matchCreation = models.IntegerField(default=0)
    matchDuration = models.IntegerField(default=0)
    matchId = models.IntegerField(default=0)
    matchMode = models.CharField(max_length=256)
    matchType = models.CharField(max_length=256)
    matchVersion = models.CharField(max_length=256)
    participants = models.ManyToManyField(Participant, null=True)
    platformId = models.CharField(max_length=256)
    queueType = models.CharField(max_length=75)
    region = models.CharField(max_length=10)
    season = models.CharField(max_length=25)